case ${OSTYPE} in
  darwin*)
    # alias ls='ls -hF -G'
    alias ls='ls -hFGW'
    ;;
  linux*)
    alias ls='ls -hFG --color=auto'
    ;;
esac
alias ll='ls -l'
alias la='ls -A'
alias cp='cp -i'
alias mv='mv -i'
alias du='du -h'
# alias cat='more'
alias du='du -h'
# alias s='screen -U'
alias zmv='noglob zmv'
alias sudo='sudo '
alias ta='tmux attach '
# alias mysql='mysql --local-infile=1'
alias javac='javac -J-Dfile.encoding=UTF-8'
alias java='java -Dfile.encoding=UTF-8'
alias scalac='scalac -J-Dfile.encoding=UTF-8'
alias scala='scala -Dfile.encoding=UTF-8'

alias o='git ls-files | peco | xargs -o vim'
alias g='cd $(ghq list -p | peco)'
alias reload='exec $SHELL -l'
# --------------------------------------------------
#  オリジナルコマンド
# --------------------------------------------------
# ファイルの削除
# rmで~/.Trashに日付付きディレクトリを作成してそこにmv
# rmfで削除
function rmf() {
  help() {
    echo 'rmf help!'
    echo 'Usage: rmf [option] filename'
    return
  }
  for file in $*
  do
    case $file in
      -h|--help)
        help
        return
        ;;
      -rf|-fr)
        option="-rf"
        ;;
      -r)
        option="-r"
        ;;
      -f)
        option="-f"
        ;;
      *)
        echo 'removed:' $file
        /bin/rm $option $file
    esac
    # shift
  done
  # return 1;
}

_rmfcmd() {
  _arguments \
    '(- *)'{-h,--help}'[show help]' \
    -r'[recursive]' \
    -f'[force]' \
    -rf'[recursive && force]' \
    '*: :_files'
}


compdef _rmfcmd rmf

function rm(){
  for file in $*
  do
    __rm_single_file $file
  done
}

function __rm_single_file(){
local DATE=`date "+%y%m%d"`
if ! [ -d ~/.Trash/$DATE/ ]
then
  command /bin/mkdir -p ~/.Trash/$DATE/
fi
if ! [ $# -eq 1 ]
then
  echo "__rm_single_file: 1 argument required but $# passed."
  exit
fi
if [ -e $1 ]
then
  BASENAME=`basename $1`
  NAME=$BASENAME
  COUNT=0
  while [ -e ~/.Trash/$DATE/$NAME ]
  do
    COUNT=$(($COUNT+1))
    NAME="$BASENAME.$COUNT"
  done
  command /bin/mv $1 ~/.Trash/$DATE/$NAME
else
  echo "No such file or directory: $file"
fi
}


function cdls() {
  \cd $1;
  ls;
}
alias cd=cdls

function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(history -n 1 | \
        eval $tac | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history

function peco-cdr () {
    local selected_dir=$(cdr -l | awk '{ print $2 }' | peco)
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N peco-cdr
bindkey '^@' peco-cdr

function peco-select-git-add() {
    local SELECTED_FILE_TO_ADD="$(git status --porcelain | \
                                  peco --query "$LBUFFER" | \
                                  awk -F ' ' '{print $NF}')"
    if [ -n "$SELECTED_FILE_TO_ADD" ]; then
      BUFFER="git add $(echo "$SELECTED_FILE_TO_ADD" | tr '\n' ' ')"
      CURSOR=$#BUFFER
    fi
    zle accept-line
    # zle clear-screen
}
zle -N peco-select-git-add
bindkey "^g^a" peco-select-git-add

function peco-select-git-checkout() {
    local SELECTED_FILE_TO_CHECKOUT="$(git branch --verbose | \
                                  peco --query "$LBUFFER" | \
                                  sed -e 's/\* //g' | \
                                  awk '{print $1}')"
    if [ -n "$SELECTED_FILE_TO_CHECKOUT" ]; then
      BUFFER="git checkout $(echo "$SELECTED_FILE_TO_CHECKOUT" | tr '\n' ' ')"
      CURSOR=$#BUFFER
    fi
    zle accept-line
}
zle -N peco-select-git-checkout
bindkey "^gco" peco-select-git-checkout

function peco-select-gitdiff() {
    local SELECTED_FILE_TO_DIFF="$(git status --porcelain | \
                                  peco --query "$LBUFFER" | \
                                  awk -F ' ' '{print $NF}')"
    if [ -n "$SELECTED_FILE_TO_DIFF" ]; then
      BUFFER="git diff $(echo "$SELECTED_FILE_TO_DIFF" | tr '\n' ' ')"
      CURSOR=$#BUFFER
    fi
    zle accept-line
    # zle clear-screen
}
zle -N peco-select-gitdiff
bindkey "^g^i" peco-select-gitdiff

###################################

setopt extended_glob

typeset -A abbreviations
abbreviations=(
"G"    "| grep"
"P"    "| pbcopy"
"X"    "| xargs"
"T"    "| tail"
"C"    "| cat"
"W"    "| wc"
"A"    "| awk"
"S"    "| sed"
"E"    "2>&1 > /dev/null"
"N"    "> /dev/null"
)

magic-abbrev-expand() {
  local MATCH
  LBUFFER=${LBUFFER%%(#m)[-_a-zA-Z0-9]#}
  LBUFFER+=${abbreviations[$MATCH]:-$MATCH}
  zle self-insert
}

no-magic-abbrev-expand() {
  LBUFFER+=' '
}

zle -N magic-abbrev-expand
zle -N no-magic-abbrev-expand
bindkey " " magic-abbrev-expand
bindkey "^x " no-magic-abbrev-expand
